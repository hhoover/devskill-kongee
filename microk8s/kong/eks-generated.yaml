---
# Source: kong/templates/controller-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eks-kong
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
  name:  eks-kong
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
      - "networking.internal.knative.dev"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
        - events
    verbs:
        - create
        - patch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
      - "networking.internal.knative.dev"
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - "configuration.konghq.com"
    resources:
      - tcpingresses/status
    verbs:
      - update
  - apiGroups:
      - "configuration.konghq.com"
    resources:
      - kongplugins
      - kongclusterplugins
      - kongcredentials
      - kongconsumers
      - kongingresses
      - tcpingresses
    verbs:
      - get
      - list
      - watch
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name:  eks-kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  eks-kong
subjects:
  - kind: ServiceAccount
    name: eks-kong
    namespace: kong
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name:  eks-kong
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name:  eks-kong
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eks-kong
subjects:
  - kind: ServiceAccount
    name: eks-kong
    namespace: kong
---
# Source: kong/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: eks-kong-admin
  namespace: kong
  annotations:
    konghq.com/protocol: "https"
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
spec:
  type: NodePort
  ports:
  - name: kong-admin-tls
    port: 8444
    targetPort: 8444
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "eks"
---
# Source: kong/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: eks-kong-manager
  namespace: kong
  annotations:
    konghq.com/protocol: "https"
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
spec:
  type: NodePort
  ports:
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "eks"
---
# Source: kong/templates/service-kong-portal-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: eks-kong-portalapi
  namespace: kong
  annotations:
    konghq.com/protocol: "https"
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
spec:
  type: NodePort
  ports:
  - name: kong-portalapi
    port: 8004
    targetPort: 8004
    protocol: TCP
  - name: kong-portalapi-tls
    port: 8447
    targetPort: 8447
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "eks"
---
# Source: kong/templates/service-kong-portal.yaml
apiVersion: v1
kind: Service
metadata:
  name: eks-kong-portal
  namespace: kong
  annotations:
    konghq.com/protocol: "https"
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
spec:
  type: NodePort
  ports:
  - name: kong-portal
    port: 8003
    targetPort: 8003
    protocol: TCP
  - name: kong-portal-tls
    port: 8446
    targetPort: 8446
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "eks"
---
# Source: kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: eks-kong-proxy
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "eks"
---
# Source: kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eks-kong
  namespace:  kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
    app.kubernetes.io/component: app
  annotations:
    kuma.io/gateway: "enabled"
    traffic.sidecar.istio.io/includeInboundPorts: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "eks"

  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.1.0
        app.kubernetes.io/instance: "eks"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "2.4"
        app.kubernetes.io/component: app
    spec:
      serviceAccountName: eks-kong
      
      initContainers:
      
      - name: wait-for-db
        image: kong/kong-gateway:2.3.3.2-alpine
        imagePullPolicy: IfNotPresent
        env:
         
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_API_URI
          value: "http://admin.kong.eks.lab"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_LISTEN
          value: "0.0.0.0:8445 http2 ssl"
        - name: KONG_ADMIN_GUI_URL
          value: "http://manager.kong.eks.lab"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_CLUSTER_TELEMETRY_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LICENSE_DATA
          valueFrom:
            secretKeyRef:
              name: kong-enterprise-license
              key: license
        - name: KONG_LOG_LEVEL
          value: "debug"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "db-democomcastfargate-kongee.ctzjaxtr66nw.us-east-2.rds.amazonaws.com"
        - name: KONG_PG_PASSWORD
          value: "rdspostgresql"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SSL_VERIFY
          value: "off"
        - name: KONG_PG_USER
          value: "rdspostgresql"
        - name: KONG_PLUGINS
          value: "bundled"
        - name: KONG_PORTAL
          value: "on"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORTAL_API_LISTEN
          value: "0.0.0.0:8004, 0.0.0.0:8447 http2 ssl"
        - name: KONG_PORTAL_API_URL
          value: "http://portalapi.kong.eks.lab"
        - name: KONG_PORTAL_GUI_HOST
          value: "portal.kong.eks.lab"
        - name: KONG_PORTAL_GUI_LISTEN
          value: "0.0.0.0:8003, 0.0.0.0:8446 http2 ssl"
        - name: KONG_PORTAL_GUI_PROTOCOL
          value: "https"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
        - name: KONG_SMTP_MOCK
          value: "on"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
      
        command: [ "/bin/sh", "-c", "until kong start; do echo 'waiting for db'; sleep 1; done; kong stop; rm -fv '/kong_prefix//stream_rpc.sock'"]
        volumeMounts:
          - name: eks-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: eks-kong-tmp
            mountPath: /tmp
          
        resources:
          {}
      containers:
      - name: ingress-controller
        args:
        - /kong-ingress-controller
        
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: kong-enterprise-superuser-password
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://localhost:8444"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "kong/eks-kong-proxy"
        image: kong/kubernetes-ingress-controller:1.2
        imagePullPolicy: IfNotPresent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
      
      - name: "proxy"
        image: kong/kong-gateway:2.3.3.2-alpine
        imagePullPolicy: IfNotPresent
        env:
         
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_API_URI
          value: "http://admin.kong.eks.lab"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_LISTEN
          value: "0.0.0.0:8445 http2 ssl"
        - name: KONG_ADMIN_GUI_URL
          value: "http://manager.kong.eks.lab"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_CLUSTER_TELEMETRY_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LICENSE_DATA
          valueFrom:
            secretKeyRef:
              name: kong-enterprise-license
              key: license
        - name: KONG_LOG_LEVEL
          value: "debug"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "db-democomcastfargate-kongee.ctzjaxtr66nw.us-east-2.rds.amazonaws.com"
        - name: KONG_PG_PASSWORD
          value: "rdspostgresql"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SSL_VERIFY
          value: "off"
        - name: KONG_PG_USER
          value: "rdspostgresql"
        - name: KONG_PLUGINS
          value: "bundled"
        - name: KONG_PORTAL
          value: "on"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORTAL_API_LISTEN
          value: "0.0.0.0:8004, 0.0.0.0:8447 http2 ssl"
        - name: KONG_PORTAL_API_URL
          value: "http://portalapi.kong.eks.lab"
        - name: KONG_PORTAL_GUI_HOST
          value: "portal.kong.eks.lab"
        - name: KONG_PORTAL_GUI_LISTEN
          value: "0.0.0.0:8003, 0.0.0.0:8446 http2 ssl"
        - name: KONG_PORTAL_GUI_PROTOCOL
          value: "https"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
        - name: KONG_SMTP_MOCK
          value: "on"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - /bin/sleep 15 && kong quit
        ports:
        - name: admin-tls
          containerPort: 8444
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        - name: manager-tls
          containerPort: 8445
          protocol: TCP
        - name: portal
          containerPort: 8003
          protocol: TCP
        - name: portal-tls
          containerPort: 8446
          protocol: TCP
        - name: portalapi
          containerPort: 8004
          protocol: TCP
        - name: portalapi-tls
          containerPort: 8447
          protocol: TCP
        volumeMounts:
          - name: eks-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: eks-kong-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      tolerations:
        []
      volumes:
        - name: eks-kong-prefix-dir
          emptyDir: {}
        - name: eks-kong-tmp
          emptyDir: {}
---
# Source: kong/templates/migrations.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: eks-kong-init-migrations
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
    app.kubernetes.io/component: init-migrations
  annotations:
spec:
  template:
    metadata:
      name: kong-init-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.1.0
        app.kubernetes.io/instance: "eks"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "2.4"
        app.kubernetes.io/component: init-migrations
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: kong-migrations
        image: kong/kong-gateway:2.3.3.2-alpine
        imagePullPolicy: IfNotPresent
        env:
         
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_API_URI
          value: "http://admin.kong.eks.lab"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_LISTEN
          value: "0.0.0.0:8445 http2 ssl"
        - name: KONG_ADMIN_GUI_URL
          value: "http://manager.kong.eks.lab"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_CLUSTER_TELEMETRY_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LICENSE_DATA
          valueFrom:
            secretKeyRef:
              name: kong-enterprise-license
              key: license
        - name: KONG_LOG_LEVEL
          value: "debug"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "db-democomcastfargate-kongee.ctzjaxtr66nw.us-east-2.rds.amazonaws.com"
        - name: KONG_PG_PASSWORD
          value: "rdspostgresql"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SSL_VERIFY
          value: "off"
        - name: KONG_PG_USER
          value: "rdspostgresql"
        - name: KONG_PLUGINS
          value: "bundled"
        - name: KONG_PORTAL
          value: "on"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORTAL_API_LISTEN
          value: "0.0.0.0:8004, 0.0.0.0:8447 http2 ssl"
        - name: KONG_PORTAL_API_URL
          value: "http://portalapi.kong.eks.lab"
        - name: KONG_PORTAL_GUI_HOST
          value: "portal.kong.eks.lab"
        - name: KONG_PORTAL_GUI_LISTEN
          value: "0.0.0.0:8003, 0.0.0.0:8446 http2 ssl"
        - name: KONG_PORTAL_GUI_PROTOCOL
          value: "https"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
        - name: KONG_SMTP_MOCK
          value: "on"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        command: [ "/bin/sh", "-c", "kong migrations bootstrap" ]
        volumeMounts:
        - name: eks-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: eks-kong-tmp
          mountPath: /tmp
        resources:
          {}
      securityContext:
        {}
      restartPolicy: OnFailure
      volumes:
      - name: eks-kong-prefix-dir
        emptyDir: {}
      - name: eks-kong-tmp
        emptyDir: {}
---
# Source: kong/templates/service-kong-admin.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: eks-kong-admin
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
  annotations:
    kubernetes.io/ingress.class: "kong"
spec:
  rules:
  - host: admin.kong.eks.lab
    http:
      paths:
        - path: /
          backend:
            serviceName: eks-kong-admin
            servicePort: 8444
---
# Source: kong/templates/service-kong-manager.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: eks-kong-manager
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
spec:
  rules:
  - host: manager.kong.eks.lab
    http:
      paths:
        - path: /
          backend:
            serviceName: eks-kong-manager
            servicePort: 8445
---
# Source: kong/templates/service-kong-portal-api.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: eks-kong-portalapi
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
  annotations:
    kubernetes.io/ingress.class: "kong"
spec:
  rules:
  - host: portalapi.kong.eks.lab
    http:
      paths:
        - path: /
          backend:
            serviceName: eks-kong-portalapi
            servicePort: 8447
---
# Source: kong/templates/service-kong-portal.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: eks-kong-portal
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
  annotations:
    kubernetes.io/ingress.class: "kong"
spec:
  rules:
  - host: portal.kong.eks.lab
    http:
      paths:
        - path: /
          backend:
            serviceName: eks-kong-portal
            servicePort: 8446
  tls:
  - hosts:
    - portal.kong.eks.lab
    secretName: eks-portal-tls-secret
---
# Source: kong/templates/migrations-post-upgrade.yaml
# Why is this Job duplicated and not using only helm hooks?
# See: https://github.com/helm/charts/pull/7362
apiVersion: batch/v1
kind: Job
metadata:
  name: eks-kong-post-upgrade-migrations
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
    app.kubernetes.io/component: post-upgrade-migrations
  annotations:
    helm.sh/hook: "post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
spec:
  template:
    metadata:
      name: kong-post-upgrade-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.1.0
        app.kubernetes.io/instance: "eks"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "2.4"
        app.kubernetes.io/component: post-upgrade-migrations
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: kong-post-upgrade-migrations
        image: kong/kong-gateway:2.3.3.2-alpine
        imagePullPolicy: IfNotPresent
        env:
         
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_API_URI
          value: "http://admin.kong.eks.lab"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_LISTEN
          value: "0.0.0.0:8445 http2 ssl"
        - name: KONG_ADMIN_GUI_URL
          value: "http://manager.kong.eks.lab"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_CLUSTER_TELEMETRY_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LICENSE_DATA
          valueFrom:
            secretKeyRef:
              name: kong-enterprise-license
              key: license
        - name: KONG_LOG_LEVEL
          value: "debug"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "db-democomcastfargate-kongee.ctzjaxtr66nw.us-east-2.rds.amazonaws.com"
        - name: KONG_PG_PASSWORD
          value: "rdspostgresql"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SSL_VERIFY
          value: "off"
        - name: KONG_PG_USER
          value: "rdspostgresql"
        - name: KONG_PLUGINS
          value: "bundled"
        - name: KONG_PORTAL
          value: "on"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORTAL_API_LISTEN
          value: "0.0.0.0:8004, 0.0.0.0:8447 http2 ssl"
        - name: KONG_PORTAL_API_URL
          value: "http://portalapi.kong.eks.lab"
        - name: KONG_PORTAL_GUI_HOST
          value: "portal.kong.eks.lab"
        - name: KONG_PORTAL_GUI_LISTEN
          value: "0.0.0.0:8003, 0.0.0.0:8446 http2 ssl"
        - name: KONG_PORTAL_GUI_PROTOCOL
          value: "https"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
        - name: KONG_SMTP_MOCK
          value: "on"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        command: [ "/bin/sh", "-c", "kong migrations finish" ]
        volumeMounts:
        - name: eks-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: eks-kong-tmp
          mountPath: /tmp
        resources:
          {}
      securityContext:
        {}
      restartPolicy: OnFailure
      volumes:
      - name: eks-kong-prefix-dir
        emptyDir: {}
      - name: eks-kong-tmp
        emptyDir: {}
---
# Source: kong/templates/migrations-pre-upgrade.yaml
# Why is this Job duplicated and not using only helm hooks?
# See: https://github.com/helm/charts/pull/7362
apiVersion: batch/v1
kind: Job
metadata:
  name: eks-kong-pre-upgrade-migrations
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.1.0
    app.kubernetes.io/instance: "eks"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "2.4"
    app.kubernetes.io/component: pre-upgrade-migrations
  annotations:
    helm.sh/hook: "pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
spec:
  template:
    metadata:
      name: kong-pre-upgrade-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.1.0
        app.kubernetes.io/instance: "eks"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "2.4"
        app.kubernetes.io/component: pre-upgrade-migrations
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: kong-upgrade-migrations
        image: kong/kong-gateway:2.3.3.2-alpine
        imagePullPolicy: IfNotPresent
        env:
         
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_API_URI
          value: "http://admin.kong.eks.lab"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_LISTEN
          value: "0.0.0.0:8445 http2 ssl"
        - name: KONG_ADMIN_GUI_URL
          value: "http://manager.kong.eks.lab"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_CLUSTER_TELEMETRY_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LICENSE_DATA
          valueFrom:
            secretKeyRef:
              name: kong-enterprise-license
              key: license
        - name: KONG_LOG_LEVEL
          value: "debug"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "db-democomcastfargate-kongee.ctzjaxtr66nw.us-east-2.rds.amazonaws.com"
        - name: KONG_PG_PASSWORD
          value: "rdspostgresql"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SSL_VERIFY
          value: "off"
        - name: KONG_PG_USER
          value: "rdspostgresql"
        - name: KONG_PLUGINS
          value: "bundled"
        - name: KONG_PORTAL
          value: "on"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORTAL_API_LISTEN
          value: "0.0.0.0:8004, 0.0.0.0:8447 http2 ssl"
        - name: KONG_PORTAL_API_URL
          value: "http://portalapi.kong.eks.lab"
        - name: KONG_PORTAL_GUI_HOST
          value: "portal.kong.eks.lab"
        - name: KONG_PORTAL_GUI_LISTEN
          value: "0.0.0.0:8003, 0.0.0.0:8446 http2 ssl"
        - name: KONG_PORTAL_GUI_PROTOCOL
          value: "https"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
        - name: KONG_SMTP_MOCK
          value: "on"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        command: [ "/bin/sh", "-c", "kong migrations up" ]
        volumeMounts:
        - name: eks-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: eks-kong-tmp
          mountPath: /tmp
        resources:
          {}
      securityContext:
        {}
      restartPolicy: OnFailure
      volumes:
      - name: eks-kong-prefix-dir
        emptyDir: {}
      - name: eks-kong-tmp
        emptyDir: {}
